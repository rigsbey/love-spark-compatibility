import { useState } from "react";
import { Button } from "@/components/ui/button";
import DateInput from "@/components/DateInput";
import CompatibilityResult from "@/components/CompatibilityResult";
import FloatingStars from "@/components/FloatingStars";
import QuestionnaireDialog from "@/components/QuestionnaireDialog";
import { useToast } from "@/components/ui/use-toast";
import { Badge } from "@/components/ui/badge";
import { TestResult } from "@/types/features";

const Index = () => {
  const [result, setResult] = useState<TestResult | null>(null);
  const [isPremium] = useState(false);
  const [isQuestionnaireOpen, setIsQuestionnaireOpen] = useState(false);
  const { toast } = useToast();

  const startFullTest = () => {
    setIsQuestionnaireOpen(true);
  };

  const resetCalculator = () => {
    setResult(null);
  };

  const handleComplete = (result: TestResult) => {
    setResult(result);
    setIsQuestionnaireOpen(false);
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center p-4 relative">
      <FloatingStars />
      <div className="z-10 w-full max-w-md">
        <h1 className="text-4xl md:text-5xl font-pacifico text-accent text-center mb-8">
          –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –≤ –ª—é–±–≤–∏
        </h1>
        
        {result === null ? (
          <div className="bg-white/90 backdrop-blur-sm p-6 rounded-xl shadow-lg space-y-6">
            <div className="flex justify-between items-center mb-4">
              <h2 className="text-2xl font-pacifico text-accent">–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å</h2>
              {!isPremium && (
                <Badge variant="secondary" className="bg-custom-pink">
                  –ë–µ—Å–ø–ª–∞—Ç–Ω–æ
                </Badge>
              )}
            </div>
            <div className="space-y-4">
              <p className="text-gray-700">
                –≠—Ç–æ—Ç —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö –≤ –æ–±–ª–∞—Å—Ç–∏ –º–µ–∂–ª–∏—á–Ω–æ—Å—Ç–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π. 
                –û–Ω –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
              </p>
              <ul className="list-disc pl-5 space-y-2 text-gray-700">
                <li>–ü–æ–Ω—è—Ç—å —É—Ä–æ–≤–µ–Ω—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏</li>
                <li>–û—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏</li>
                <li>–í—ã—è–≤–∏—Ç—å –æ–±—â–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ü–µ–ª–∏</li>
                <li>–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∑–æ–Ω—ã —Ä–æ—Å—Ç–∞</li>
              </ul>
            </div>
            <Button
              onClick={startFullTest}
              className="w-full bg-primary hover:bg-primary-hover text-white text-lg py-6"
            >
              –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            </Button>
            {!isPremium && (
              <div className="mt-4 p-4 bg-custom-blue/20 rounded-lg">
                <h3 className="text-lg font-semibold text-accent mb-2">
                  üåü Premium –∞–Ω–∞–ª–∏–∑
                </h3>
                <ul className="text-sm space-y-2">
                  <li>‚ú® –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏</li>
                  <li>üìä –î–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –æ–± –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö</li>
                  <li>üí´ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
                </ul>
                <Button
                  variant="outline"
                  className="mt-3 w-full border-accent text-accent hover:bg-accent hover:text-white"
                  onClick={() => toast({
                    title: "–°–∫–æ—Ä–æ!",
                    description: "Premium —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                  })}
                >
                  –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å Premium
                </Button>
              </div>
            )}
          </div>
        ) : (
          <CompatibilityResult result={result} isPremium={isPremium} onReset={resetCalculator} />
        )}
      </div>

      <QuestionnaireDialog
        open={isQuestionnaireOpen}
        onOpenChange={setIsQuestionnaireOpen}
        date1={date1}
        date2={date2}
        onComplete={handleComplete}
      />
    </div>
  );
};

export default Index;