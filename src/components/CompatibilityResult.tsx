import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import { TestResult } from "@/types/features";
import { cn } from "@/lib/utils";
import { useState } from "react";
import FeedbackForm from "@/components/FeedbackForm";

interface CompatibilityResultProps {
  result: TestResult;
  isPremium: boolean;
  onReset: () => void;
}

const CompatibilityResult = ({ result, isPremium, onReset }: CompatibilityResultProps) => {
  const [showTips, setShowTips] = useState(false);

  const getCompatibilityDescription = (compatibility: number) => {
    if (compatibility >= 80) return "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å! –£ –≤–∞—Å –æ—á–µ–Ω—å –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è üí´";
    if (compatibility >= 65) return "–•–æ—Ä–æ—à–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å! –í—ã –æ—Ç–ª–∏—á–Ω–æ –¥–æ–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ ‚ú®";
    if (compatibility >= 50) return "–ù–µ–ø–ª–æ—Ö–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å. –ï—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è üå±";
    return "–ï—Å—Ç—å –Ω–∞–¥ —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å. –ù–æ —ç—Ç–æ –Ω–µ –ø—Ä–∏–≥–æ–≤–æ—Ä! üåü";
  };

  const getCategoryEmoji = (category: string) => {
    const emojis: Record<string, string> = {
      attachment: "ü§ó",
      trust: "ü§ù",
      communication: "üí≠",
      values: "üíù",
      emotional: "‚ù§Ô∏è",
      independence: "ü¶ã",
      future: "üéØ",
      loveLanguages: "üíå"
    };
    return emojis[category] || "‚ú®";
  };

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const categoryGroups = {
    emotional: {
      title: "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å",
      categories: ["attachment", "trust", "emotional"],
      emoji: "‚ù§Ô∏è",
      getDescription: (scores: Record<string, number>) => {
        const avg = Object.entries(scores)
          .filter(([key]) => ["attachment", "trust", "emotional"].includes(key))
          .reduce((acc, [_, score]) => acc + score, 0) / 3;
        
        if (avg >= 75) return "–°–∏–ª—å–Ω–∞—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞!";
        if (avg >= 60) return "–•–æ—Ä–æ—à–∞—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–≤—è–∑—å. –ú–æ–∂–Ω–æ —É–∫—Ä–µ–ø–∏—Ç—å —á–µ—Ä–µ–∑ –æ–±—â–µ–Ω–∏–µ.";
        return "–°—Ç–æ–∏—Ç –±–æ–ª—å—à–µ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –±–ª–∏–∑–æ—Å—Ç—å—é.";
      }
    },
    future: {
      title: "–í–∑–≥–ª—è–¥ –≤ –±—É–¥—É—â–µ–µ",
      categories: ["future", "values"],
      emoji: "üéØ",
      getDescription: (scores: Record<string, number>) => {
        const avg = Object.entries(scores)
          .filter(([key]) => ["future", "values"].includes(key))
          .reduce((acc, [_, score]) => acc + score, 0) / 2;
        
        if (avg >= 75) return "–£ –≤–∞—Å —Å—Ö–æ–∂–∏–µ —Ü–µ–ª–∏ –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏. –û—Ç–ª–∏—á–Ω–∞—è –æ—Å–Ω–æ–≤–∞!";
        if (avg >= 60) return "–í–∞—à–∏ –≤–∑–≥–ª—è–¥—ã –Ω–∞ –±—É–¥—É—â–µ–µ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã, –Ω–æ —Ç—Ä–µ–±—É—é—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏—è.";
        return "–£–¥–µ–ª–∏—Ç–µ –≤—Ä–µ–º—è –æ–±—Å—É–∂–¥–µ–Ω–∏—é –≤–∞—à–∏—Ö —Ü–µ–ª–µ–π –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π.";
      }
    },
    independence: {
      title: "–õ–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ",
      categories: ["communication", "independence"],
      emoji: "ü¶ã",
      getDescription: (scores: Record<string, number>) => {
        const avg = Object.entries(scores)
          .filter(([key]) => ["communication", "independence"].includes(key))
          .reduce((acc, [_, score]) => acc + score, 0) / 2;
        
        if (avg >= 75) return "–û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –ª–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏ –æ–±—â–µ–Ω–∏—è!";
        if (avg >= 60) return "–•–æ—Ä–æ—à–∏–π –±–∞–ª–∞–Ω—Å, –Ω–æ –∏–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –æ–±—â–∞—Ç—å—Å—è.";
        return "–°—Ç–æ–∏—Ç –Ω–∞–π—Ç–∏ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ª–∏—á–Ω—ã–º –∏ –æ–±—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º.";
      }
    }
  };

  const getTips = () => [
    "–û–±—Å—É–∂–¥–∞–π—Ç–µ –≤–∞—à–∏ —á—É–≤—Å—Ç–≤–∞ –∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è —Ö–æ—Ç—è –±—ã —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é",
    "–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ –±—É–¥—É—â–µ–µ, —Å—Ç–∞–≤—å—Ç–µ –æ–±—â–∏–µ —Ü–µ–ª–∏",
    "–£–≤–∞–∂–∞–π—Ç–µ –ª–∏—á–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥—Ä—É–≥ –¥—Ä—É–≥–∞",
    "–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–ª—É—à–∞–Ω–∏–µ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞—Ö",
    "–ù–∞—Ö–æ–¥–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π"
  ];

  return (
    <div className="flex gap-6">
      <div className="w-full max-w-md p-6 bg-white rounded-xl shadow-lg animate-fade-in space-y-6">
        {/* –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç */}
        <div className="text-center space-y-4">
          <h2 className="text-2xl font-pacifico text-accent">
            {getCategoryEmoji(result.compatibilityType || 'good')} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
          </h2>
          <div className="relative inline-block">
            <span className="text-4xl font-bold text-accent">
              {result.compatibility}%
            </span>
          </div>
          <p className="text-gray-600 mt-2">
            {getCompatibilityDescription(result.compatibility)}
          </p>
        </div>

        {/* –ì—Ä—É–ø–ø—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
        {Object.entries(categoryGroups).map(([key, group]) => (
          <div key={key} className="space-y-3">
            <h3 className="text-lg font-semibold flex items-center gap-2">
              <span>{group.emoji}</span>
              {group.title}
            </h3>
            <Progress 
              value={
                group.categories.reduce((acc, cat) => 
                  acc + (result.categoryScores?.[cat] || 0), 0) / group.categories.length
              } 
              className="h-2"
            />
            <p className="text-sm text-gray-600">
              {group.getDescription(result.categoryScores || {})}
            </p>
          </div>
        ))}

        {/* –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-accent flex items-center gap-2">
            <span>üíö</span> –í–∞—à–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
          </h3>
          <div className="space-y-2">
            {result.categoryScores && (
              <>
                {result.categoryScores.emotional >= 70 && (
                  <div className="p-3 bg-green-50 rounded-lg text-green-700">
                    –í—ã –æ—Ç–ª–∏—á–Ω–æ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —ç–º–æ—Ü–∏–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞
                  </div>
                )}
                {result.categoryScores.communication >= 70 && (
                  <div className="p-3 bg-green-50 rounded-lg text-green-700">
                    –£ –≤–∞—Å —Ö–æ—Ä–æ—à–æ —Ä–∞–∑–≤–∏—Ç—ã –Ω–∞–≤—ã–∫–∏ –æ–±—â–µ–Ω–∏—è
                  </div>
                )}
                {result.categoryScores.trust >= 70 && (
                  <div className="p-3 bg-green-50 rounded-lg text-green-700">
                    –ú–µ–∂–¥—É –≤–∞–º–∏ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è
                  </div>
                )}
                {result.categoryScores.values >= 70 && (
                  <div className="p-3 bg-green-50 rounded-lg text-green-700">
                    –í–∞—à–∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ —Ö–æ—Ä–æ—à–æ —Å–æ–≤–ø–∞–¥–∞—é—Ç
                  </div>
                )}
                {result.categoryScores.future >= 70 && (
                  <div className="p-3 bg-green-50 rounded-lg text-green-700">
                    –£ –≤–∞—Å —Å—Ö–æ–∂–µ–µ –≤–∏–¥–µ–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ
                  </div>
                )}
              </>
            )}
          </div>
        </div>

        {/* –ó–æ–Ω—ã —Ä–æ—Å—Ç–∞ */}
        <div className="space-y-4">
          <h3 className="text-lg font-semibold text-accent flex items-center gap-2">
            <span>üå±</span> –ó–æ–Ω—ã —Ä–æ—Å—Ç–∞
          </h3>
          <div className="space-y-2">
            {result.categoryScores && (
              <>
                {result.categoryScores.emotional < 60 && (
                  <div className="p-3 bg-amber-50 rounded-lg text-amber-700">
                    –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –±–æ–ª—å—à–µ –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ —á—É–≤—Å—Ç–≤–∞–º–∏
                  </div>
                )}
                {result.categoryScores.communication < 60 && (
                  <div className="p-3 bg-amber-50 rounded-lg text-amber-700">
                    –£–¥–µ–ª–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤—É –æ–±—â–µ–Ω–∏—è
                  </div>
                )}
                {result.categoryScores.trust < 60 && (
                  <div className="p-3 bg-amber-50 rounded-lg text-amber-700">
                    –†–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–¥ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–µ–º –¥–æ–≤–µ—Ä–∏—è
                  </div>
                )}
                {result.categoryScores.values < 60 && (
                  <div className="p-3 bg-amber-50 rounded-lg text-amber-700">
                    –û–±—Å—É–¥–∏—Ç–µ –≤–∞—à–∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã
                  </div>
                )}
                {result.categoryScores.future < 60 && (
                  <div className="p-3 bg-amber-50 rounded-lg text-amber-700">
                    –ü–æ–≥–æ–≤–æ—Ä–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø–ª–∞–Ω–∞—Ö –Ω–∞ –±—É–¥—É—â–µ–µ
                  </div>
                )}
              </>
            )}
          </div>
        </div>

        {/* –°–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
        <div className="space-y-3">
          <Button
            onClick={() => setShowTips(!showTips)}
            className="w-full"
            variant="outline"
          >
            {showTips ? "–°–∫—Ä—ã—Ç—å —Å–æ–≤–µ—Ç—ã" : "–ß—Ç–æ —è –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å?"}
          </Button>
          
          {showTips && (
            <div className="space-y-2 p-4 bg-gray-50 rounded-lg">
              {getTips().map((tip, index) => (
                <p key={index} className="text-sm flex items-start gap-2">
                  <span>‚Ä¢</span> {tip}
                </p>
              ))}
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="space-y-3 pt-4">
          <Button
            onClick={onReset}
            className="w-full bg-secondary hover:bg-secondary-hover text-white"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –º–∞—Ç—á
          </Button>
          
          {!isPremium && (
            <Button
              variant="outline"
              className="w-full border-accent text-accent hover:bg-accent hover:text-white"
            >
              –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑
            </Button>
          )}
        </div>
      </div>
      
      <div className="w-80 hidden lg:block sticky top-6 self-start">
        <FeedbackForm />
      </div>
    </div>
  );
};

export default CompatibilityResult;